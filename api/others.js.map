{"version":3,"sources":["webpack:///api/others.js","webpack:///./docs/api/others.md"],"names":["webpackJsonp","1003","module","exports","content","extra"],"mappings":"AAAAA,cAAc,EAAE,KAEVC,KACA,SAAUC,EAAQC,GCFxBD,EAAAC,SACAC,QAAA,i48BACAC","file":"api/others.js","sourcesContent":["webpackJsonp([9,15],{\n\n/***/ 1003:\n/***/ (function(module, exports) {\n\n\t/*markdown-loader*/\n\tmodule.exports = {\n\t  \"content\": \"<div class=\\\"picidae-toc\\\">\\n<ul>\\n<li>\\n<a href=\\\"#model\\\">Model</a>\\n<ul>\\n<li>\\n<a href=\\\"#list\\\">List</a>\\n</li>\\n<li>\\n<a href=\\\"#piped\\\">Piped</a>\\n</li>\\n<li>\\n<a href=\\\"#root\\\">Root</a>\\n<ul>\\n<li>\\n<a href=\\\"#create\\\">create</a>\\n</li>\\n<li>\\n<a href=\\\"#init\\\">init</a>\\n</li>\\n<li>\\n<a href=\\\"#update\\\">update</a>\\n</li>\\n<li>\\n<a href=\\\"#exit\\\">exit</a>\\n</li>\\n<li>\\n<a href=\\\"#tojson\\\">toJSON</a>\\n</li>\\n<li>\\n<a href=\\\"#action\\\">action</a>\\n</li>\\n<li>\\n<a href=\\\"#clone\\\">clone</a>\\n</li>\\n<li>\\n<a href=\\\"#isequal\\\">isEqual</a>\\n</li>\\n<li>\\n<a href=\\\"#assignshallow\\\">assignShallow</a>\\n</li>\\n<li>\\n<a href=\\\"#assigndeep\\\">assignDeep</a>\\n</li>\\n<li>\\n<a href=\\\"#isempty\\\">isEmpty</a>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<a href=\\\"#symbolic\\\">Symbolic</a>\\n</li>\\n<li>\\n<a href=\\\"#symbolic-1\\\">Symbolic</a>\\n</li>\\n<li>\\n<a href=\\\"#symboliccustom\\\">SymbolicCustom</a>\\n</li>\\n<li>\\n<a href=\\\"#symboliccustom-1\\\">SymbolicCustom</a>\\n</li>\\n<li>\\n<a href=\\\"#symboliclink\\\">SymbolicLink</a>\\n<ul>\\n<li>\\n<a href=\\\"#setsymbolic\\\">setSymbolic</a>\\n</li>\\n<li>\\n<a href=\\\"#setsymbolic-1\\\">setSymbolic</a>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<a href=\\\"#symboliclink-1\\\">SymbolicLink</a>\\n<ul>\\n<li>\\n<a href=\\\"#setsymbolic-2\\\">setSymbolic</a>\\n</li>\\n<li>\\n<a href=\\\"#setsymbolic-3\\\">setSymbolic</a>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<a href=\\\"#utilities\\\">Utilities</a>\\n<ul>\\n<li>\\n<a href=\\\"#symboliclink-2\\\">symbolicLink</a>\\n</li>\\n<li>\\n<a href=\\\"#h\\\">h</a>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<a href=\\\"#extension\\\">Extension</a>\\n<ul>\\n<li>\\n<a href=\\\"#providerfactory\\\">providerFactory</a>\\n</li>\\n<li>\\n<a href=\\\"#router\\\">Router</a>\\n</li>\\n<li>\\n<a href=\\\"#routercontext\\\">RouterContext</a>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</div>\\n<hr>\\n<h1 id=\\\"model\\\"><a href=\\\"#model\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Model</h1>\\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->  \\n<h2 id=\\\"list\\\"><a href=\\\"#list\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>List</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/List.js#L63-L70\\\" title=\\\"Source code on GitHub\\\">src/Model/List.js:63-70</a>  </p>\\n<p>List 定义数组类型，非常适合于定义 Modal 后，使用<code>assign</code>方法一次性赋值  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>init</code>  {any[]}  </p>\\n</li>\\n<li>\\n<p><code>Type</code>  {Function}  </p>\\n</li>\\n<li>\\n<p><code>options</code>  {object}  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\"><span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Model</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">Root</span> </span>{  \\n  @observable a = <span class=\\\"hljs-string\\\">'xyz'</span>  \\n  @observable b = <span class=\\\"hljs-string\\\">'abc'</span>  \\n}  \\n  \\n<span class=\\\"hljs-keyword\\\">const</span> list = List.create([{ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'xbb'</span> }, { <span class=\\\"hljs-attr\\\">b</span>: <span class=\\\"hljs-string\\\">'hhh'</span> }], Model)  \\n  \\nlist[<span class=\\\"hljs-number\\\">0</span>] <span class=\\\"hljs-keyword\\\">instanceof</span> Model === <span class=\\\"hljs-literal\\\">true</span>  \\nlist[<span class=\\\"hljs-number\\\">1</span>] <span class=\\\"hljs-keyword\\\">instanceof</span> Model === <span class=\\\"hljs-literal\\\">true</span>  \\n  \\nlist.assign([{ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'xxx'</span> }])  \\nlist[<span class=\\\"hljs-number\\\">0</span>] <span class=\\\"hljs-keyword\\\">instanceof</span> Model === <span class=\\\"hljs-literal\\\">true</span>  \\nlist.length === <span class=\\\"hljs-number\\\">1</span>  </code></pre>\\n<h2 id=\\\"piped\\\"><a href=\\\"#piped\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Piped</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Piped.js#L19-L27\\\" title=\\\"Source code on GitHub\\\">src/Model/Piped.js:19-27</a>  </p>\\n<p><strong>Extends Root</strong>  </p>\\n<p>其对 Root 中的 init/update 进行的无差别的赋值，<br>\\n如果你需要对 View 中的 props 一股脑都同步至 Model 中，<br>\\n则可以通过继承该类来实现  </p>\\n<h2 id=\\\"root\\\"><a href=\\\"#root\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Root</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L19-L215\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:19-215</a>  </p>\\n<p>建议所以的 Model 都继承自该类，提供了一些方法  </p>\\n<h3 id=\\\"create\\\"><a href=\\\"#create\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>create</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L33-L35\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:33-35</a>  </p>\\n<p>建议使用给方法创建实例对象，而不是 <code>new Model()</code> 原因参看 <a href=\\\"https://github.com/imcuttle/babel-plugin-class-properties-default-value\\\">https://github.com/imcuttle/babel-plugin-class-properties-default-value</a>  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>init</code> <strong><a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a></strong>  (optional, default <code>{}</code>)  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\"><span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Model</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">Root</span> </span>{  \\n   val = <span class=\\\"hljs-number\\\">123</span>  \\n}  \\n<span class=\\\"hljs-keyword\\\">const</span> model = Model.create({ <span class=\\\"hljs-attr\\\">val</span>: <span class=\\\"hljs-string\\\">'345'</span> })  </code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h3 id=\\\"init\\\"><a href=\\\"#init\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>init</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L43-L43\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:43-43</a>  </p>\\n<p>该方法对应与 React 的 componentDidMount 生命周期  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>props</code> <strong><a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a></strong> View 中的 <code>this.props</code>  </p>\\n</li>\\n</ul>\\n<h3 id=\\\"update\\\"><a href=\\\"#update\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>update</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L51-L51\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:51-51</a>  </p>\\n<p>该方法对应与 React 的 componentWillReceiveProps 生命周期  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>props</code> <strong><a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a></strong> View 中的 <code>nextProps</code>  </p>\\n</li>\\n</ul>\\n<h3 id=\\\"exit\\\"><a href=\\\"#exit\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>exit</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L59-L59\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:59-59</a>  </p>\\n<p>该方法对应与 React 的 componentWillUnmount 生命周期  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>props</code> <strong><a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a></strong> View 中的 <code>this.props</code>  </p>\\n</li>\\n</ul>\\n<h3 id=\\\"tojson\\\"><a href=\\\"#tojson\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>toJSON</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L66-L77\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:66-77</a>  </p>\\n<p>将 this 转换为 JSON  </p>\\n<h3 id=\\\"action\\\"><a href=\\\"#action\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>action</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L94-L94\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:94-94</a>  </p>\\n<p>设置当前对象中 key 的值  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>key</code> <strong>(<a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String\\\">string</a> | <a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array\\\">array</a>)</strong>  </p>\\n</li>\\n<li>\\n<p><code>value</code> <strong>any</strong>  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">Root  \\n .create()  \\n .setValue(<span class=\\\"hljs-string\\\">'a'</span>, {})  \\n .setValue(<span class=\\\"hljs-string\\\">'a.b'</span>, <span class=\\\"hljs-string\\\">'123'</span>)  \\n .setValue([<span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-string\\\">'b'</span>], <span class=\\\"hljs-string\\\">'456'</span>)  </code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h3 id=\\\"clone\\\"><a href=\\\"#clone\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>clone</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L130-L132\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:130-132</a>  </p>\\n<p>拷贝当前对象  </p>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong> 一个新的实例  </p>\\n<h3 id=\\\"isequal\\\"><a href=\\\"#isequal\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>isEqual</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L145-L150\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:145-150</a>  </p>\\n<p>对比两个对象是否相同  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>other</code> <strong>any</strong>  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">Root.create().isEqual({}) <span class=\\\"hljs-comment\\\">// true  </span>\\nRoot.create({ <span class=\\\"hljs-attr\\\">a</span>: [<span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">3</span>] }).isEqual({ <span class=\\\"hljs-attr\\\">a</span>: [<span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">3</span>] }) <span class=\\\"hljs-comment\\\">// true  </span>\\nRoot.create({ <span class=\\\"hljs-attr\\\">a</span>: [<span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">3</span>] }).isEqual(Root.create({ <span class=\\\"hljs-attr\\\">a</span>: [<span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">3</span>] })) <span class=\\\"hljs-comment\\\">// true  </span></code></pre>\\n<p>Returns <strong><a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean\\\">boolean</a></strong>  </p>\\n<h3 id=\\\"assignshallow\\\"><a href=\\\"#assignshallow\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>assignShallow</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L175-L177\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:175-177</a>  </p>\\n<p>批量赋值，如需要覆写 <code>assign</code>，请覆写 <code>assignShallow</code>  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>data</code> <strong>(<a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a> | <a href=\\\"#root\\\">Root</a>)</strong>  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">Root  \\n .create()  \\n .assign({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-attr\\\">b</span>: <span class=\\\"hljs-string\\\">'b'</span> })  \\n .assignShallow({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-attr\\\">b</span>: <span class=\\\"hljs-string\\\">'b'</span> })  \\n<span class=\\\"hljs-comment\\\">// 支持嵌套赋值  </span>\\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Nested</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">Root</span> </span>{  \\n  @observable root = Root.create({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'c'</span> })  \\n}  \\nNested  \\n .create({ <span class=\\\"hljs-attr\\\">root</span>: { <span class=\\\"hljs-attr\\\">b</span>: <span class=\\\"hljs-string\\\">'b'</span> } })  \\n .root <span class=\\\"hljs-keyword\\\">instanceof</span> Root <span class=\\\"hljs-comment\\\">// true  </span>\\nNested  \\n .create({ <span class=\\\"hljs-attr\\\">root</span>: { <span class=\\\"hljs-attr\\\">b</span>: <span class=\\\"hljs-string\\\">'b'</span> } })  \\n .root.a === <span class=\\\"hljs-string\\\">'c'</span> <span class=\\\"hljs-comment\\\">// true  </span></code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h3 id=\\\"assigndeep\\\"><a href=\\\"#assigndeep\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>assignDeep</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L189-L192\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:189-192</a>  </p>\\n<ul>\\n<li>\\n<p><strong>See: <a href=\\\"#assign\\\">assign</a></strong>  </p>\\n</li>\\n</ul>\\n<p>深拷贝批量赋值  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>data</code> <strong>(<a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a> | <a href=\\\"#root\\\">Root</a>)</strong>  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\"><span class=\\\"hljs-keyword\\\">const</span> a = Root.create().assignDeep({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-attr\\\">b</span>: <span class=\\\"hljs-string\\\">'b'</span> })  </code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h3 id=\\\"isempty\\\"><a href=\\\"#isempty\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>isEmpty</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L207-L214\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:207-214</a>  </p>\\n<ul>\\n<li>\\n<p><strong>See: <a href=\\\"#assign\\\">assign</a></strong>  </p>\\n</li>\\n</ul>\\n<p>判断当前实例是否内容为空  </p>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">Root.create().isEmpty() <span class=\\\"hljs-comment\\\">// true  </span>\\nRoot.create({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">''</span>, <span class=\\\"hljs-attr\\\">b</span>: [] }).isEmpty() <span class=\\\"hljs-comment\\\">// true  </span>\\nRoot.create({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">''</span>, <span class=\\\"hljs-attr\\\">b</span>: [], <span class=\\\"hljs-attr\\\">c</span>: Root.create() }).isEmpty() <span class=\\\"hljs-comment\\\">// true  </span>\\nRoot.create({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-attr\\\">b</span>: [] }).isEmpty() <span class=\\\"hljs-comment\\\">// false  </span>\\nRoot.create({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">''</span>, <span class=\\\"hljs-attr\\\">b</span>: [<span class=\\\"hljs-string\\\">'a'</span>] }).isEmpty() <span class=\\\"hljs-comment\\\">// false  </span></code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h2 id=\\\"symbolic\\\"><a href=\\\"#symbolic\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Symbolic</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/ViewRoot.js#L19-L24\\\" title=\\\"Source code on GitHub\\\">src/Model/ViewRoot.js:19-24</a>  </p>\\n<ul>\\n<li>\\n<p><strong>See: {SymbolicLink}</strong>  </p>\\n</li>\\n</ul>\\n<p>用于创建链接对象  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>ref</code>  {Object}  </p>\\n</li>\\n<li>\\n<p><code>path</code>  {String}  </p>\\n</li>\\n</ul>\\n<p>Returns <strong><a href=\\\"#symbolic\\\">Symbolic</a></strong>  </p>\\n<h2 id=\\\"symbolic-1\\\"><a href=\\\"#symbolic-1\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Symbolic</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/SymbolicLink.js#L22-L27\\\" title=\\\"Source code on GitHub\\\">src/Model/SymbolicLink.js:22-27</a>  </p>\\n<ul>\\n<li>\\n<p><strong>See: {SymbolicLink}</strong>  </p>\\n</li>\\n</ul>\\n<p>用于创建链接对象  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>ref</code>  {Object}  </p>\\n</li>\\n<li>\\n<p><code>path</code>  {String}  </p>\\n</li>\\n</ul>\\n<p>Returns <strong><a href=\\\"#symbolic\\\">Symbolic</a></strong>  </p>\\n<h2 id=\\\"symboliccustom\\\"><a href=\\\"#symboliccustom\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>SymbolicCustom</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/ViewRoot.js#L40-L45\\\" title=\\\"Source code on GitHub\\\">src/Model/ViewRoot.js:40-45</a>  </p>\\n<p><strong>Extends Symbolic</strong>  </p>\\n<ul>\\n<li>\\n<p><strong>See: {SymbolicLink}</strong>  </p>\\n</li>\\n</ul>\\n<p>用于自定义的链接关系  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>descriptor</code>  {object}  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">SymbolicCustom({  \\n  get() {}  \\n  set() {}  \\n}, <span class=\\\"hljs-string\\\">'value'</span>)  </code></pre>\\n<p>Returns <strong><a href=\\\"#symboliccustom\\\">SymbolicCustom</a></strong>  </p>\\n<h2 id=\\\"symboliccustom-1\\\"><a href=\\\"#symboliccustom-1\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>SymbolicCustom</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/SymbolicLink.js#L43-L48\\\" title=\\\"Source code on GitHub\\\">src/Model/SymbolicLink.js:43-48</a>  </p>\\n<p><strong>Extends Symbolic</strong>  </p>\\n<ul>\\n<li>\\n<p><strong>See: {SymbolicLink}</strong>  </p>\\n</li>\\n</ul>\\n<p>用于自定义的链接关系  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>descriptor</code>  {object}  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">SymbolicCustom({  \\n  get() {}  \\n  set() {}  \\n}, <span class=\\\"hljs-string\\\">'value'</span>)  </code></pre>\\n<p>Returns <strong><a href=\\\"#symboliccustom\\\">SymbolicCustom</a></strong>  </p>\\n<h2 id=\\\"symboliclink\\\"><a href=\\\"#symboliclink\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>SymbolicLink</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/ViewRoot.js#L80-L99\\\" title=\\\"Source code on GitHub\\\">src/Model/ViewRoot.js:80-99</a>  </p>\\n<p><strong>Extends Root</strong>  </p>\\n<p>用于链接自己的引用到其他的地方  </p>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\"><span class=\\\"hljs-keyword\\\">import</span> { SymbolicLink, Root } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'react-mobx-vm'</span>  \\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Model</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">SymbolicLink</span> </span>{  \\n  @observable title = <span class=\\\"hljs-string\\\">'modelTitle'</span>  \\n}  \\n  \\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Parent</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">Root</span> </span>{  \\n   model = Model.create().setSymbolic(<span class=\\\"hljs-string\\\">'title'</span>, Symbolic(<span class=\\\"hljs-keyword\\\">this</span>, <span class=\\\"hljs-string\\\">'title'</span>))  \\n  \\n   @observable title = <span class=\\\"hljs-string\\\">'abc'</span>  \\n}  \\n  \\n<span class=\\\"hljs-keyword\\\">const</span> parent = Parent.create()  \\nparent.model.title === parent.title <span class=\\\"hljs-comment\\\">// true  </span>\\nparent.title === <span class=\\\"hljs-string\\\">'abc'</span> <span class=\\\"hljs-comment\\\">// true  </span></code></pre>\\n<h3 id=\\\"setsymbolic\\\"><a href=\\\"#setsymbolic\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>setSymbolic</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/ViewRoot.js#L91-L98\\\" title=\\\"Source code on GitHub\\\">src/Model/ViewRoot.js:91-98</a>  </p>\\n<p>单独设置 Symbolic  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>path</code>  {String|Array}  </p>\\n</li>\\n<li>\\n<p><code>symbolic</code>  {Symbolic}  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">model.setSymbolic(<span class=\\\"hljs-string\\\">'title'</span>, Symbolic(<span class=\\\"hljs-keyword\\\">this</span>, <span class=\\\"hljs-string\\\">'abc'</span>))  </code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h3 id=\\\"setsymbolic-1\\\"><a href=\\\"#setsymbolic-1\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>setSymbolic</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/SymbolicLink.js#L94-L98\\\" title=\\\"Source code on GitHub\\\">src/Model/SymbolicLink.js:94-98</a>  </p>\\n<p>单独设置 Symbolic  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>path</code>  {String|Array}  </p>\\n</li>\\n<li>\\n<p><code>symbolic</code>  {Symbolic}  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">model.setSymbolic(<span class=\\\"hljs-string\\\">'title'</span>, Symbolic(<span class=\\\"hljs-keyword\\\">this</span>, <span class=\\\"hljs-string\\\">'abc'</span>))  </code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h2 id=\\\"symboliclink-1\\\"><a href=\\\"#symboliclink-1\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>SymbolicLink</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/SymbolicLink.js#L83-L99\\\" title=\\\"Source code on GitHub\\\">src/Model/SymbolicLink.js:83-99</a>  </p>\\n<p><strong>Extends Root</strong>  </p>\\n<p>用于链接自己的引用到其他的地方  </p>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\"><span class=\\\"hljs-keyword\\\">import</span> { SymbolicLink, Root } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'react-mobx-vm'</span>  \\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Model</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">SymbolicLink</span> </span>{  \\n  @observable title = <span class=\\\"hljs-string\\\">'modelTitle'</span>  \\n}  \\n  \\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Parent</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">Root</span> </span>{  \\n   model = Model.create().setSymbolic(<span class=\\\"hljs-string\\\">'title'</span>, Symbolic(<span class=\\\"hljs-keyword\\\">this</span>, <span class=\\\"hljs-string\\\">'title'</span>))  \\n  \\n   @observable title = <span class=\\\"hljs-string\\\">'abc'</span>  \\n}  \\n  \\n<span class=\\\"hljs-keyword\\\">const</span> parent = Parent.create()  \\nparent.model.title === parent.title <span class=\\\"hljs-comment\\\">// true  </span>\\nparent.title === <span class=\\\"hljs-string\\\">'abc'</span> <span class=\\\"hljs-comment\\\">// true  </span></code></pre>\\n<h3 id=\\\"setsymbolic-2\\\"><a href=\\\"#setsymbolic-2\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>setSymbolic</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/ViewRoot.js#L91-L98\\\" title=\\\"Source code on GitHub\\\">src/Model/ViewRoot.js:91-98</a>  </p>\\n<p>单独设置 Symbolic  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>path</code>  {String|Array}  </p>\\n</li>\\n<li>\\n<p><code>symbolic</code>  {Symbolic}  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">model.setSymbolic(<span class=\\\"hljs-string\\\">'title'</span>, Symbolic(<span class=\\\"hljs-keyword\\\">this</span>, <span class=\\\"hljs-string\\\">'abc'</span>))  </code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h3 id=\\\"setsymbolic-3\\\"><a href=\\\"#setsymbolic-3\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>setSymbolic</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/SymbolicLink.js#L94-L98\\\" title=\\\"Source code on GitHub\\\">src/Model/SymbolicLink.js:94-98</a>  </p>\\n<p>单独设置 Symbolic  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>path</code>  {String|Array}  </p>\\n</li>\\n<li>\\n<p><code>symbolic</code>  {Symbolic}  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">model.setSymbolic(<span class=\\\"hljs-string\\\">'title'</span>, Symbolic(<span class=\\\"hljs-keyword\\\">this</span>, <span class=\\\"hljs-string\\\">'abc'</span>))  </code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h1 id=\\\"utilities\\\"><a href=\\\"#utilities\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Utilities</h1>\\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->  \\n<h2 id=\\\"symboliclink-2\\\"><a href=\\\"#symboliclink-2\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>symbolicLink</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/utils/symbolicLink.js#L27-L74\\\" title=\\\"Source code on GitHub\\\">src/utils/symbolicLink.js:27-74</a>  </p>\\n<ul>\\n<li>\\n<p><strong>See: <a href=\\\"/api/others#symboliclink\\\">SymbolicLink</a></strong>  </p>\\n</li>\\n</ul>\\n<p>用于建立 target 与外接的连接，类似于<a href=\\\"https://en.wikipedia.org/wiki/Symbolic_link\\\">Symbolic Link</a>.  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>target</code>  </p>\\n</li>\\n<li>\\n<p><code>config</code>  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\"><span class=\\\"hljs-keyword\\\">let</span> host = { <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'a'</span> }  \\n <span class=\\\"hljs-keyword\\\">const</span> proxy = { <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'x'</span> }  \\n host = symbolic(host, {  \\n   <span class=\\\"hljs-string\\\">'a'</span>: Symbolic(proxy, <span class=\\\"hljs-string\\\">'a'</span>)  \\n })  \\n host.a === <span class=\\\"hljs-string\\\">'x'</span>  </code></pre>\\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->  \\n<h2 id=\\\"h\\\"><a href=\\\"#h\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>h</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/renderer/mixedRenderer.js#L40-L54\\\" title=\\\"Source code on GitHub\\\">src/renderer/mixedRenderer.js:40-54</a>  </p>\\n<p>可以渲染 Vm 实例的方法，类似于 <code>React.createElement</code>  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>model</code> <strong>(VmInstance | ReactComponent | <a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String\\\">string</a>)</strong>  </p>\\n</li>\\n<li>\\n<p><code>propsOrClassName</code> <strong>(<a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String\\\">string</a> | <a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a>)</strong>  (optional, default <code>{}</code>)  </p>\\n</li>\\n<li>\\n<p><code>props</code> <strong><a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a></strong>  (optional, default <code>null</code>)  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">h(model, <span class=\\\"hljs-string\\\">'class-name'</span>, {},  \\n <span class=\\\"hljs-comment\\\">// children  </span>\\n <span class=\\\"hljs-string\\\">'1'</span>, <span class=\\\"hljs-string\\\">'2'</span>  \\n);  \\nh.div({}, <span class=\\\"hljs-string\\\">'inner'</span>)  \\nh(<span class=\\\"hljs-string\\\">'div'</span>, {}, <span class=\\\"hljs-string\\\">'inner'</span>)  \\nh(<span class=\\\"hljs-string\\\">'div'</span>, <span class=\\\"hljs-string\\\">'classname'</span>, {}, <span class=\\\"hljs-string\\\">'inner'</span>)  \\nh(Component, <span class=\\\"hljs-string\\\">'classname'</span>, {},  \\n   h.span()  \\n)  </code></pre>\\n<p>Returns <strong>ReactElement</strong>  </p>\\n<h1 id=\\\"extension\\\"><a href=\\\"#extension\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Extension</h1>\\n<p>一些额外的扩展</p>\\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->  \\n<h2 id=\\\"providerfactory\\\"><a href=\\\"#providerfactory\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>providerFactory</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/extension/providerFactory.js#L25-L35\\\" title=\\\"Source code on GitHub\\\">src/extension/providerFactory.js:25-35</a>  </p>\\n<p>用于产生一个 Provider，传入一个全局的 store  </p>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\"><span class=\\\"hljs-keyword\\\">const</span> app = AppVM.create()  \\n<span class=\\\"hljs-keyword\\\">const</span> Provider = providerFactory(app)  \\n  \\nReactDOM.render(  \\n   <span class=\\\"xml\\\"><span class=\\\"hljs-tag\\\">&#x3C;<span class=\\\"hljs-name\\\">Provider</span>></span>  \\n     {...}  \\n   <span class=\\\"hljs-tag\\\">&#x3C;/<span class=\\\"hljs-name\\\">Provider</span>></span></span>,  \\n   <span class=\\\"hljs-built_in\\\">window</span>.root  \\n)  </code></pre>\\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->  \\n<h2 id=\\\"router\\\"><a href=\\\"#router\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Router</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/srcPackages/RouterV3.js#L19-L29\\\" title=\\\"Source code on GitHub\\\">srcPackages/RouterV3.js:19-29</a>  </p>\\n<p>如果你依赖了 <strong>react-router v3</strong>，那么可以使用该 Router 定义，而不是 react-router 的 Router<br>\\n<strong>注意</strong>: 请用以下方式引入<br>\\n<code>import Router from 'react-mobx-vm/packages/RouterV3'</code>  </p>\\n<h2 id=\\\"routercontext\\\"><a href=\\\"#routercontext\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>RouterContext</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/srcPackages/RouterContextV3.js#L18-L47\\\" title=\\\"Source code on GitHub\\\">srcPackages/RouterContextV3.js:18-47</a>  </p>\\n<p>如果你依赖了 <strong>react-router v3</strong>，那么可以使用该 RouterContext 定义，而不是 react-router 的 RouterContext<br>\\n<strong>注意</strong>: 请用以下方式引入<br>\\n<code>import RouterContext from 'react-mobx-vm/packages/RouterContextV3'</code>  </p>\\n\",\n\t  \"extra\": {}\n\t}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// api/others.js","/*markdown-loader*/\nmodule.exports = {\n  \"content\": \"<div class=\\\"picidae-toc\\\">\\n<ul>\\n<li>\\n<a href=\\\"#model\\\">Model</a>\\n<ul>\\n<li>\\n<a href=\\\"#list\\\">List</a>\\n</li>\\n<li>\\n<a href=\\\"#piped\\\">Piped</a>\\n</li>\\n<li>\\n<a href=\\\"#root\\\">Root</a>\\n<ul>\\n<li>\\n<a href=\\\"#create\\\">create</a>\\n</li>\\n<li>\\n<a href=\\\"#init\\\">init</a>\\n</li>\\n<li>\\n<a href=\\\"#update\\\">update</a>\\n</li>\\n<li>\\n<a href=\\\"#exit\\\">exit</a>\\n</li>\\n<li>\\n<a href=\\\"#tojson\\\">toJSON</a>\\n</li>\\n<li>\\n<a href=\\\"#action\\\">action</a>\\n</li>\\n<li>\\n<a href=\\\"#clone\\\">clone</a>\\n</li>\\n<li>\\n<a href=\\\"#isequal\\\">isEqual</a>\\n</li>\\n<li>\\n<a href=\\\"#assignshallow\\\">assignShallow</a>\\n</li>\\n<li>\\n<a href=\\\"#assigndeep\\\">assignDeep</a>\\n</li>\\n<li>\\n<a href=\\\"#isempty\\\">isEmpty</a>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<a href=\\\"#symbolic\\\">Symbolic</a>\\n</li>\\n<li>\\n<a href=\\\"#symbolic-1\\\">Symbolic</a>\\n</li>\\n<li>\\n<a href=\\\"#symboliccustom\\\">SymbolicCustom</a>\\n</li>\\n<li>\\n<a href=\\\"#symboliccustom-1\\\">SymbolicCustom</a>\\n</li>\\n<li>\\n<a href=\\\"#symboliclink\\\">SymbolicLink</a>\\n<ul>\\n<li>\\n<a href=\\\"#setsymbolic\\\">setSymbolic</a>\\n</li>\\n<li>\\n<a href=\\\"#setsymbolic-1\\\">setSymbolic</a>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<a href=\\\"#symboliclink-1\\\">SymbolicLink</a>\\n<ul>\\n<li>\\n<a href=\\\"#setsymbolic-2\\\">setSymbolic</a>\\n</li>\\n<li>\\n<a href=\\\"#setsymbolic-3\\\">setSymbolic</a>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<a href=\\\"#utilities\\\">Utilities</a>\\n<ul>\\n<li>\\n<a href=\\\"#symboliclink-2\\\">symbolicLink</a>\\n</li>\\n<li>\\n<a href=\\\"#h\\\">h</a>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<a href=\\\"#extension\\\">Extension</a>\\n<ul>\\n<li>\\n<a href=\\\"#providerfactory\\\">providerFactory</a>\\n</li>\\n<li>\\n<a href=\\\"#router\\\">Router</a>\\n</li>\\n<li>\\n<a href=\\\"#routercontext\\\">RouterContext</a>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</div>\\n<hr>\\n<h1 id=\\\"model\\\"><a href=\\\"#model\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Model</h1>\\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->  \\n<h2 id=\\\"list\\\"><a href=\\\"#list\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>List</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/List.js#L63-L70\\\" title=\\\"Source code on GitHub\\\">src/Model/List.js:63-70</a>  </p>\\n<p>List 定义数组类型，非常适合于定义 Modal 后，使用<code>assign</code>方法一次性赋值  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>init</code>  {any[]}  </p>\\n</li>\\n<li>\\n<p><code>Type</code>  {Function}  </p>\\n</li>\\n<li>\\n<p><code>options</code>  {object}  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\"><span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Model</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">Root</span> </span>{  \\n  @observable a = <span class=\\\"hljs-string\\\">'xyz'</span>  \\n  @observable b = <span class=\\\"hljs-string\\\">'abc'</span>  \\n}  \\n  \\n<span class=\\\"hljs-keyword\\\">const</span> list = List.create([{ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'xbb'</span> }, { <span class=\\\"hljs-attr\\\">b</span>: <span class=\\\"hljs-string\\\">'hhh'</span> }], Model)  \\n  \\nlist[<span class=\\\"hljs-number\\\">0</span>] <span class=\\\"hljs-keyword\\\">instanceof</span> Model === <span class=\\\"hljs-literal\\\">true</span>  \\nlist[<span class=\\\"hljs-number\\\">1</span>] <span class=\\\"hljs-keyword\\\">instanceof</span> Model === <span class=\\\"hljs-literal\\\">true</span>  \\n  \\nlist.assign([{ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'xxx'</span> }])  \\nlist[<span class=\\\"hljs-number\\\">0</span>] <span class=\\\"hljs-keyword\\\">instanceof</span> Model === <span class=\\\"hljs-literal\\\">true</span>  \\nlist.length === <span class=\\\"hljs-number\\\">1</span>  </code></pre>\\n<h2 id=\\\"piped\\\"><a href=\\\"#piped\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Piped</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Piped.js#L19-L27\\\" title=\\\"Source code on GitHub\\\">src/Model/Piped.js:19-27</a>  </p>\\n<p><strong>Extends Root</strong>  </p>\\n<p>其对 Root 中的 init/update 进行的无差别的赋值，<br>\\n如果你需要对 View 中的 props 一股脑都同步至 Model 中，<br>\\n则可以通过继承该类来实现  </p>\\n<h2 id=\\\"root\\\"><a href=\\\"#root\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Root</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L19-L215\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:19-215</a>  </p>\\n<p>建议所以的 Model 都继承自该类，提供了一些方法  </p>\\n<h3 id=\\\"create\\\"><a href=\\\"#create\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>create</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L33-L35\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:33-35</a>  </p>\\n<p>建议使用给方法创建实例对象，而不是 <code>new Model()</code> 原因参看 <a href=\\\"https://github.com/imcuttle/babel-plugin-class-properties-default-value\\\">https://github.com/imcuttle/babel-plugin-class-properties-default-value</a>  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>init</code> <strong><a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a></strong>  (optional, default <code>{}</code>)  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\"><span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Model</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">Root</span> </span>{  \\n   val = <span class=\\\"hljs-number\\\">123</span>  \\n}  \\n<span class=\\\"hljs-keyword\\\">const</span> model = Model.create({ <span class=\\\"hljs-attr\\\">val</span>: <span class=\\\"hljs-string\\\">'345'</span> })  </code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h3 id=\\\"init\\\"><a href=\\\"#init\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>init</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L43-L43\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:43-43</a>  </p>\\n<p>该方法对应与 React 的 componentDidMount 生命周期  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>props</code> <strong><a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a></strong> View 中的 <code>this.props</code>  </p>\\n</li>\\n</ul>\\n<h3 id=\\\"update\\\"><a href=\\\"#update\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>update</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L51-L51\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:51-51</a>  </p>\\n<p>该方法对应与 React 的 componentWillReceiveProps 生命周期  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>props</code> <strong><a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a></strong> View 中的 <code>nextProps</code>  </p>\\n</li>\\n</ul>\\n<h3 id=\\\"exit\\\"><a href=\\\"#exit\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>exit</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L59-L59\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:59-59</a>  </p>\\n<p>该方法对应与 React 的 componentWillUnmount 生命周期  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>props</code> <strong><a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a></strong> View 中的 <code>this.props</code>  </p>\\n</li>\\n</ul>\\n<h3 id=\\\"tojson\\\"><a href=\\\"#tojson\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>toJSON</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L66-L77\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:66-77</a>  </p>\\n<p>将 this 转换为 JSON  </p>\\n<h3 id=\\\"action\\\"><a href=\\\"#action\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>action</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L94-L94\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:94-94</a>  </p>\\n<p>设置当前对象中 key 的值  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>key</code> <strong>(<a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String\\\">string</a> | <a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array\\\">array</a>)</strong>  </p>\\n</li>\\n<li>\\n<p><code>value</code> <strong>any</strong>  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">Root  \\n .create()  \\n .setValue(<span class=\\\"hljs-string\\\">'a'</span>, {})  \\n .setValue(<span class=\\\"hljs-string\\\">'a.b'</span>, <span class=\\\"hljs-string\\\">'123'</span>)  \\n .setValue([<span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-string\\\">'b'</span>], <span class=\\\"hljs-string\\\">'456'</span>)  </code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h3 id=\\\"clone\\\"><a href=\\\"#clone\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>clone</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L130-L132\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:130-132</a>  </p>\\n<p>拷贝当前对象  </p>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong> 一个新的实例  </p>\\n<h3 id=\\\"isequal\\\"><a href=\\\"#isequal\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>isEqual</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L145-L150\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:145-150</a>  </p>\\n<p>对比两个对象是否相同  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>other</code> <strong>any</strong>  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">Root.create().isEqual({}) <span class=\\\"hljs-comment\\\">// true  </span>\\nRoot.create({ <span class=\\\"hljs-attr\\\">a</span>: [<span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">3</span>] }).isEqual({ <span class=\\\"hljs-attr\\\">a</span>: [<span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">3</span>] }) <span class=\\\"hljs-comment\\\">// true  </span>\\nRoot.create({ <span class=\\\"hljs-attr\\\">a</span>: [<span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">3</span>] }).isEqual(Root.create({ <span class=\\\"hljs-attr\\\">a</span>: [<span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">3</span>] })) <span class=\\\"hljs-comment\\\">// true  </span></code></pre>\\n<p>Returns <strong><a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean\\\">boolean</a></strong>  </p>\\n<h3 id=\\\"assignshallow\\\"><a href=\\\"#assignshallow\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>assignShallow</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L175-L177\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:175-177</a>  </p>\\n<p>批量赋值，如需要覆写 <code>assign</code>，请覆写 <code>assignShallow</code>  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>data</code> <strong>(<a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a> | <a href=\\\"#root\\\">Root</a>)</strong>  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">Root  \\n .create()  \\n .assign({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-attr\\\">b</span>: <span class=\\\"hljs-string\\\">'b'</span> })  \\n .assignShallow({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-attr\\\">b</span>: <span class=\\\"hljs-string\\\">'b'</span> })  \\n<span class=\\\"hljs-comment\\\">// 支持嵌套赋值  </span>\\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Nested</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">Root</span> </span>{  \\n  @observable root = Root.create({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'c'</span> })  \\n}  \\nNested  \\n .create({ <span class=\\\"hljs-attr\\\">root</span>: { <span class=\\\"hljs-attr\\\">b</span>: <span class=\\\"hljs-string\\\">'b'</span> } })  \\n .root <span class=\\\"hljs-keyword\\\">instanceof</span> Root <span class=\\\"hljs-comment\\\">// true  </span>\\nNested  \\n .create({ <span class=\\\"hljs-attr\\\">root</span>: { <span class=\\\"hljs-attr\\\">b</span>: <span class=\\\"hljs-string\\\">'b'</span> } })  \\n .root.a === <span class=\\\"hljs-string\\\">'c'</span> <span class=\\\"hljs-comment\\\">// true  </span></code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h3 id=\\\"assigndeep\\\"><a href=\\\"#assigndeep\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>assignDeep</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L189-L192\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:189-192</a>  </p>\\n<ul>\\n<li>\\n<p><strong>See: <a href=\\\"#assign\\\">assign</a></strong>  </p>\\n</li>\\n</ul>\\n<p>深拷贝批量赋值  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>data</code> <strong>(<a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a> | <a href=\\\"#root\\\">Root</a>)</strong>  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\"><span class=\\\"hljs-keyword\\\">const</span> a = Root.create().assignDeep({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-attr\\\">b</span>: <span class=\\\"hljs-string\\\">'b'</span> })  </code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h3 id=\\\"isempty\\\"><a href=\\\"#isempty\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>isEmpty</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/Root.js#L207-L214\\\" title=\\\"Source code on GitHub\\\">src/Model/Root.js:207-214</a>  </p>\\n<ul>\\n<li>\\n<p><strong>See: <a href=\\\"#assign\\\">assign</a></strong>  </p>\\n</li>\\n</ul>\\n<p>判断当前实例是否内容为空  </p>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">Root.create().isEmpty() <span class=\\\"hljs-comment\\\">// true  </span>\\nRoot.create({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">''</span>, <span class=\\\"hljs-attr\\\">b</span>: [] }).isEmpty() <span class=\\\"hljs-comment\\\">// true  </span>\\nRoot.create({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">''</span>, <span class=\\\"hljs-attr\\\">b</span>: [], <span class=\\\"hljs-attr\\\">c</span>: Root.create() }).isEmpty() <span class=\\\"hljs-comment\\\">// true  </span>\\nRoot.create({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-attr\\\">b</span>: [] }).isEmpty() <span class=\\\"hljs-comment\\\">// false  </span>\\nRoot.create({ <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">''</span>, <span class=\\\"hljs-attr\\\">b</span>: [<span class=\\\"hljs-string\\\">'a'</span>] }).isEmpty() <span class=\\\"hljs-comment\\\">// false  </span></code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h2 id=\\\"symbolic\\\"><a href=\\\"#symbolic\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Symbolic</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/ViewRoot.js#L19-L24\\\" title=\\\"Source code on GitHub\\\">src/Model/ViewRoot.js:19-24</a>  </p>\\n<ul>\\n<li>\\n<p><strong>See: {SymbolicLink}</strong>  </p>\\n</li>\\n</ul>\\n<p>用于创建链接对象  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>ref</code>  {Object}  </p>\\n</li>\\n<li>\\n<p><code>path</code>  {String}  </p>\\n</li>\\n</ul>\\n<p>Returns <strong><a href=\\\"#symbolic\\\">Symbolic</a></strong>  </p>\\n<h2 id=\\\"symbolic-1\\\"><a href=\\\"#symbolic-1\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Symbolic</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/SymbolicLink.js#L22-L27\\\" title=\\\"Source code on GitHub\\\">src/Model/SymbolicLink.js:22-27</a>  </p>\\n<ul>\\n<li>\\n<p><strong>See: {SymbolicLink}</strong>  </p>\\n</li>\\n</ul>\\n<p>用于创建链接对象  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>ref</code>  {Object}  </p>\\n</li>\\n<li>\\n<p><code>path</code>  {String}  </p>\\n</li>\\n</ul>\\n<p>Returns <strong><a href=\\\"#symbolic\\\">Symbolic</a></strong>  </p>\\n<h2 id=\\\"symboliccustom\\\"><a href=\\\"#symboliccustom\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>SymbolicCustom</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/ViewRoot.js#L40-L45\\\" title=\\\"Source code on GitHub\\\">src/Model/ViewRoot.js:40-45</a>  </p>\\n<p><strong>Extends Symbolic</strong>  </p>\\n<ul>\\n<li>\\n<p><strong>See: {SymbolicLink}</strong>  </p>\\n</li>\\n</ul>\\n<p>用于自定义的链接关系  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>descriptor</code>  {object}  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">SymbolicCustom({  \\n  get() {}  \\n  set() {}  \\n}, <span class=\\\"hljs-string\\\">'value'</span>)  </code></pre>\\n<p>Returns <strong><a href=\\\"#symboliccustom\\\">SymbolicCustom</a></strong>  </p>\\n<h2 id=\\\"symboliccustom-1\\\"><a href=\\\"#symboliccustom-1\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>SymbolicCustom</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/SymbolicLink.js#L43-L48\\\" title=\\\"Source code on GitHub\\\">src/Model/SymbolicLink.js:43-48</a>  </p>\\n<p><strong>Extends Symbolic</strong>  </p>\\n<ul>\\n<li>\\n<p><strong>See: {SymbolicLink}</strong>  </p>\\n</li>\\n</ul>\\n<p>用于自定义的链接关系  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>descriptor</code>  {object}  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">SymbolicCustom({  \\n  get() {}  \\n  set() {}  \\n}, <span class=\\\"hljs-string\\\">'value'</span>)  </code></pre>\\n<p>Returns <strong><a href=\\\"#symboliccustom\\\">SymbolicCustom</a></strong>  </p>\\n<h2 id=\\\"symboliclink\\\"><a href=\\\"#symboliclink\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>SymbolicLink</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/ViewRoot.js#L80-L99\\\" title=\\\"Source code on GitHub\\\">src/Model/ViewRoot.js:80-99</a>  </p>\\n<p><strong>Extends Root</strong>  </p>\\n<p>用于链接自己的引用到其他的地方  </p>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\"><span class=\\\"hljs-keyword\\\">import</span> { SymbolicLink, Root } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'react-mobx-vm'</span>  \\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Model</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">SymbolicLink</span> </span>{  \\n  @observable title = <span class=\\\"hljs-string\\\">'modelTitle'</span>  \\n}  \\n  \\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Parent</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">Root</span> </span>{  \\n   model = Model.create().setSymbolic(<span class=\\\"hljs-string\\\">'title'</span>, Symbolic(<span class=\\\"hljs-keyword\\\">this</span>, <span class=\\\"hljs-string\\\">'title'</span>))  \\n  \\n   @observable title = <span class=\\\"hljs-string\\\">'abc'</span>  \\n}  \\n  \\n<span class=\\\"hljs-keyword\\\">const</span> parent = Parent.create()  \\nparent.model.title === parent.title <span class=\\\"hljs-comment\\\">// true  </span>\\nparent.title === <span class=\\\"hljs-string\\\">'abc'</span> <span class=\\\"hljs-comment\\\">// true  </span></code></pre>\\n<h3 id=\\\"setsymbolic\\\"><a href=\\\"#setsymbolic\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>setSymbolic</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/ViewRoot.js#L91-L98\\\" title=\\\"Source code on GitHub\\\">src/Model/ViewRoot.js:91-98</a>  </p>\\n<p>单独设置 Symbolic  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>path</code>  {String|Array}  </p>\\n</li>\\n<li>\\n<p><code>symbolic</code>  {Symbolic}  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">model.setSymbolic(<span class=\\\"hljs-string\\\">'title'</span>, Symbolic(<span class=\\\"hljs-keyword\\\">this</span>, <span class=\\\"hljs-string\\\">'abc'</span>))  </code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h3 id=\\\"setsymbolic-1\\\"><a href=\\\"#setsymbolic-1\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>setSymbolic</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/SymbolicLink.js#L94-L98\\\" title=\\\"Source code on GitHub\\\">src/Model/SymbolicLink.js:94-98</a>  </p>\\n<p>单独设置 Symbolic  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>path</code>  {String|Array}  </p>\\n</li>\\n<li>\\n<p><code>symbolic</code>  {Symbolic}  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">model.setSymbolic(<span class=\\\"hljs-string\\\">'title'</span>, Symbolic(<span class=\\\"hljs-keyword\\\">this</span>, <span class=\\\"hljs-string\\\">'abc'</span>))  </code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h2 id=\\\"symboliclink-1\\\"><a href=\\\"#symboliclink-1\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>SymbolicLink</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/SymbolicLink.js#L83-L99\\\" title=\\\"Source code on GitHub\\\">src/Model/SymbolicLink.js:83-99</a>  </p>\\n<p><strong>Extends Root</strong>  </p>\\n<p>用于链接自己的引用到其他的地方  </p>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\"><span class=\\\"hljs-keyword\\\">import</span> { SymbolicLink, Root } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'react-mobx-vm'</span>  \\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Model</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">SymbolicLink</span> </span>{  \\n  @observable title = <span class=\\\"hljs-string\\\">'modelTitle'</span>  \\n}  \\n  \\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">Parent</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">Root</span> </span>{  \\n   model = Model.create().setSymbolic(<span class=\\\"hljs-string\\\">'title'</span>, Symbolic(<span class=\\\"hljs-keyword\\\">this</span>, <span class=\\\"hljs-string\\\">'title'</span>))  \\n  \\n   @observable title = <span class=\\\"hljs-string\\\">'abc'</span>  \\n}  \\n  \\n<span class=\\\"hljs-keyword\\\">const</span> parent = Parent.create()  \\nparent.model.title === parent.title <span class=\\\"hljs-comment\\\">// true  </span>\\nparent.title === <span class=\\\"hljs-string\\\">'abc'</span> <span class=\\\"hljs-comment\\\">// true  </span></code></pre>\\n<h3 id=\\\"setsymbolic-2\\\"><a href=\\\"#setsymbolic-2\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>setSymbolic</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/ViewRoot.js#L91-L98\\\" title=\\\"Source code on GitHub\\\">src/Model/ViewRoot.js:91-98</a>  </p>\\n<p>单独设置 Symbolic  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>path</code>  {String|Array}  </p>\\n</li>\\n<li>\\n<p><code>symbolic</code>  {Symbolic}  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">model.setSymbolic(<span class=\\\"hljs-string\\\">'title'</span>, Symbolic(<span class=\\\"hljs-keyword\\\">this</span>, <span class=\\\"hljs-string\\\">'abc'</span>))  </code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h3 id=\\\"setsymbolic-3\\\"><a href=\\\"#setsymbolic-3\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>setSymbolic</h3>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/Model/SymbolicLink.js#L94-L98\\\" title=\\\"Source code on GitHub\\\">src/Model/SymbolicLink.js:94-98</a>  </p>\\n<p>单独设置 Symbolic  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>path</code>  {String|Array}  </p>\\n</li>\\n<li>\\n<p><code>symbolic</code>  {Symbolic}  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">model.setSymbolic(<span class=\\\"hljs-string\\\">'title'</span>, Symbolic(<span class=\\\"hljs-keyword\\\">this</span>, <span class=\\\"hljs-string\\\">'abc'</span>))  </code></pre>\\n<p>Returns <strong><a href=\\\"#root\\\">Root</a></strong>  </p>\\n<h1 id=\\\"utilities\\\"><a href=\\\"#utilities\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Utilities</h1>\\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->  \\n<h2 id=\\\"symboliclink-2\\\"><a href=\\\"#symboliclink-2\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>symbolicLink</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/utils/symbolicLink.js#L27-L74\\\" title=\\\"Source code on GitHub\\\">src/utils/symbolicLink.js:27-74</a>  </p>\\n<ul>\\n<li>\\n<p><strong>See: <a href=\\\"/api/others#symboliclink\\\">SymbolicLink</a></strong>  </p>\\n</li>\\n</ul>\\n<p>用于建立 target 与外接的连接，类似于<a href=\\\"https://en.wikipedia.org/wiki/Symbolic_link\\\">Symbolic Link</a>.  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>target</code>  </p>\\n</li>\\n<li>\\n<p><code>config</code>  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\"><span class=\\\"hljs-keyword\\\">let</span> host = { <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'a'</span> }  \\n <span class=\\\"hljs-keyword\\\">const</span> proxy = { <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'x'</span> }  \\n host = symbolic(host, {  \\n   <span class=\\\"hljs-string\\\">'a'</span>: Symbolic(proxy, <span class=\\\"hljs-string\\\">'a'</span>)  \\n })  \\n host.a === <span class=\\\"hljs-string\\\">'x'</span>  </code></pre>\\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->  \\n<h2 id=\\\"h\\\"><a href=\\\"#h\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>h</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/renderer/mixedRenderer.js#L40-L54\\\" title=\\\"Source code on GitHub\\\">src/renderer/mixedRenderer.js:40-54</a>  </p>\\n<p>可以渲染 Vm 实例的方法，类似于 <code>React.createElement</code>  </p>\\n<p><strong>Parameters</strong>  </p>\\n<ul>\\n<li>\\n<p><code>model</code> <strong>(VmInstance | ReactComponent | <a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String\\\">string</a>)</strong>  </p>\\n</li>\\n<li>\\n<p><code>propsOrClassName</code> <strong>(<a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String\\\">string</a> | <a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a>)</strong>  (optional, default <code>{}</code>)  </p>\\n</li>\\n<li>\\n<p><code>props</code> <strong><a href=\\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object\\\">object</a></strong>  (optional, default <code>null</code>)  </p>\\n</li>\\n</ul>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\">h(model, <span class=\\\"hljs-string\\\">'class-name'</span>, {},  \\n <span class=\\\"hljs-comment\\\">// children  </span>\\n <span class=\\\"hljs-string\\\">'1'</span>, <span class=\\\"hljs-string\\\">'2'</span>  \\n);  \\nh.div({}, <span class=\\\"hljs-string\\\">'inner'</span>)  \\nh(<span class=\\\"hljs-string\\\">'div'</span>, {}, <span class=\\\"hljs-string\\\">'inner'</span>)  \\nh(<span class=\\\"hljs-string\\\">'div'</span>, <span class=\\\"hljs-string\\\">'classname'</span>, {}, <span class=\\\"hljs-string\\\">'inner'</span>)  \\nh(Component, <span class=\\\"hljs-string\\\">'classname'</span>, {},  \\n   h.span()  \\n)  </code></pre>\\n<p>Returns <strong>ReactElement</strong>  </p>\\n<h1 id=\\\"extension\\\"><a href=\\\"#extension\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Extension</h1>\\n<p>一些额外的扩展</p>\\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->  \\n<h2 id=\\\"providerfactory\\\"><a href=\\\"#providerfactory\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>providerFactory</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/src/extension/providerFactory.js#L25-L35\\\" title=\\\"Source code on GitHub\\\">src/extension/providerFactory.js:25-35</a>  </p>\\n<p>用于产生一个 Provider，传入一个全局的 store  </p>\\n<p><strong>Examples</strong>  </p>\\n<pre><code class=\\\"hljs language-javascript\\\" data-query=\\\"{}\\\" data-lang=\\\"javascript\\\"><span class=\\\"hljs-keyword\\\">const</span> app = AppVM.create()  \\n<span class=\\\"hljs-keyword\\\">const</span> Provider = providerFactory(app)  \\n  \\nReactDOM.render(  \\n   <span class=\\\"xml\\\"><span class=\\\"hljs-tag\\\">&#x3C;<span class=\\\"hljs-name\\\">Provider</span>></span>  \\n     {...}  \\n   <span class=\\\"hljs-tag\\\">&#x3C;/<span class=\\\"hljs-name\\\">Provider</span>></span></span>,  \\n   <span class=\\\"hljs-built_in\\\">window</span>.root  \\n)  </code></pre>\\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->  \\n<h2 id=\\\"router\\\"><a href=\\\"#router\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>Router</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/srcPackages/RouterV3.js#L19-L29\\\" title=\\\"Source code on GitHub\\\">srcPackages/RouterV3.js:19-29</a>  </p>\\n<p>如果你依赖了 <strong>react-router v3</strong>，那么可以使用该 Router 定义，而不是 react-router 的 Router<br>\\n<strong>注意</strong>: 请用以下方式引入<br>\\n<code>import Router from 'react-mobx-vm/packages/RouterV3'</code>  </p>\\n<h2 id=\\\"routercontext\\\"><a href=\\\"#routercontext\\\" aria-hidden=\\\"true\\\"><span class=\\\"icon icon-link\\\"></span></a>RouterContext</h2>\\n<p><a href=\\\"https://github.com/be-fe/react-mobx-vm/blob/2138b241540679e784e641a40781b5fdec56fd37/srcPackages/RouterContextV3.js#L18-L47\\\" title=\\\"Source code on GitHub\\\">srcPackages/RouterContextV3.js:18-47</a>  </p>\\n<p>如果你依赖了 <strong>react-router v3</strong>，那么可以使用该 RouterContext 定义，而不是 react-router 的 RouterContext<br>\\n<strong>注意</strong>: 请用以下方式引入<br>\\n<code>import RouterContext from 'react-mobx-vm/packages/RouterContextV3'</code>  </p>\\n\",\n  \"extra\": {}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/picidae/lib/lib/loaders/markdown-loader!./docs/api/others.md\n// module id = 1003\n// module chunks = 9"],"sourceRoot":""}